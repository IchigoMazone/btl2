
package org.example.view;

import org.example.service.RequestService;
import org.example.service.NotificationService;
import org.example.entity.Person;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import org.example.entity.SelectedRoomInfo;
import org.example.service.UserInfoService;
import java.util.UUID;
import java.util.ArrayList;
import java.util.List;
import javax.swing.*;
import javax.swing.border.TitledBorder;
import java.awt.*;
import java.util.Objects;
import java.util.UUID;

public class CustomerBookingView {

    public static JPanel createBookingPanel(MainFrameView mainFrame, String username, SelectedRoomInfo selectedRoom) {
        JPanel panel = new JPanel();
        panel.setLayout(new BoxLayout(panel, BoxLayout.Y_AXIS));
        panel.setPreferredSize(new Dimension(950, 800));
        panel.setBackground(Color.WHITE);
        panel.setBorder(BorderFactory.createEmptyBorder(0, 0, 0, 0));

        // Form v√† button panel
        JPanel formPanel = createFormPanel(mainFrame, username, selectedRoom);
        JPanel buttonPanel = createButtonPanel(mainFrame, username, selectedRoom);

        panel.add(formPanel);
        panel.add(Box.createVerticalStrut(10));
        panel.add(buttonPanel);

        return panel;
    }

    private static JTextField[] hoTenFields = new JTextField[3];
    private static JComboBox<String>[] loaiCombos = new JComboBox[3];
    private static JTextField[] maFields = new JTextField[3];
    private static JComboBox<Integer> cbSoNguoi;
    private static JTextField tfMaChung;

    private static JPanel createFormPanel(MainFrameView mainFrame, String username, SelectedRoomInfo selectedRoom) {
        JPanel formPanel = new JPanel(new GridBagLayout());
        formPanel.setBackground(UIManager.getColor("Panel.background"));
        formPanel.setBorder(BorderFactory.createTitledBorder(
                BorderFactory.createLineBorder(new Color(180, 180, 180)),
                "Th√¥ng tin ng∆∞·ªùi d√πng",
                TitledBorder.LEFT, TitledBorder.TOP));

        GridBagConstraints gbc = new GridBagConstraints();
        gbc.insets = new Insets(6, 10, 6, 10);
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.weightx = 1.0;

        // S·ªë ng∆∞·ªùi
        gbc.gridy = 0;
        gbc.gridx = 0;
        formPanel.add(new JLabel("S·ªë ng∆∞·ªùi:"), gbc);
        gbc.gridx = 1;
        gbc.gridwidth = 3;
        Integer[] soNguoiOptions = {0, 1, 2, 3};
        cbSoNguoi = new JComboBox<>(soNguoiOptions);
        formPanel.add(cbSoNguoi, gbc);
        gbc.gridwidth = 1;

        // Ng∆∞·ªùi ƒë·∫°i di·ªán (ng∆∞·ªùi ƒë·∫∑t ph√≤ng)
        gbc.gridy = 1;
        gbc.gridx = 0;
        formPanel.add(new JLabel("Lo·∫°i gi·∫•y t·ªù:"), gbc);
        gbc.gridx = 1;
        JComboBox<String> cbLoaiChung = new JComboBox<>(new String[]{"Kh√¥ng c√≥", "M√£ ƒë·ªãnh danh", "H·ªô chi·∫øu"});
        formPanel.add(cbLoaiChung, gbc);
        gbc.gridx = 2;
        formPanel.add(new JLabel("M√£:"), gbc);
        gbc.gridx = 3;
        tfMaChung = new JTextField();
        formPanel.add(tfMaChung, gbc);

        String[] loaiOptions = {"Kh√¥ng c√≥", "M√£ ƒë·ªãnh danh", "H·ªô chi·∫øu"};

        for (int i = 0; i < 3; i++) {
            int row = i * 2 + 2;

            gbc.gridy = row;
            gbc.gridx = 0;
            formPanel.add(new JLabel("H·ªç t√™n ng∆∞·ªùi " + (i + 1) + ":"), gbc);
            gbc.gridx = 1;
            gbc.gridwidth = 3;
            hoTenFields[i] = new JTextField();
            formPanel.add(hoTenFields[i], gbc);

            gbc.gridy = row + 1;
            gbc.gridwidth = 1;
            gbc.gridx = 0;
            formPanel.add(new JLabel("Lo·∫°i gi·∫•y t·ªù:"), gbc);
            gbc.gridx = 1;
            loaiCombos[i] = new JComboBox<>(loaiOptions);
            formPanel.add(loaiCombos[i], gbc);
            gbc.gridx = 2;
            formPanel.add(new JLabel("M√£:"), gbc);
            gbc.gridx = 3;
            maFields[i] = new JTextField();
            formPanel.add(maFields[i], gbc);

            int index = i;
            loaiCombos[i].addActionListener(e -> {
                String selected = (String) loaiCombos[index].getSelectedItem();
                if ("Kh√¥ng c√≥".equals(selected)) {
                    maFields[index].setText("Tr·∫ª em");
                    maFields[index].setEditable(false);
                } else {
                    maFields[index].setText("");
                    maFields[index].setEditable(true);
                }
            });
        }

        cbSoNguoi.addActionListener(e -> {
            int selected = (int) cbSoNguoi.getSelectedItem();
            for (int i = 0; i < 3; i++) {
                boolean enable = i < selected;
                hoTenFields[i].setEnabled(enable);
                loaiCombos[i].setEnabled(enable);
                maFields[i].setEnabled(enable);
                if (!enable) {
                    hoTenFields[i].setText("");
                    maFields[i].setText("");
                }
            }
        });

        cbSoNguoi.setSelectedIndex(0);
        return formPanel;
    }

    private static String generateRequestId() {
        return "REQ" + UUID.randomUUID().toString().substring(0, 5).toUpperCase();
    }

    private static JPanel createButtonPanel(MainFrameView mainFrame, String username, SelectedRoomInfo selectedRoom) {
        JPanel btnPanel = new JPanel(new FlowLayout(FlowLayout.RIGHT));
        btnPanel.setBackground(UIManager.getColor("Panel.background"));

        JButton btnXacNhan = new JButton("X√°c nh·∫≠n");
        JButton btnQuayLai = new JButton("Quay l·∫°i");

        btnQuayLai.addActionListener(e -> {
            JPanel searchPanel = CustomerSearchView.createSearchPanel(mainFrame);
            mainFrame.setCustomerDynamicContent(searchPanel);
        });

        btnXacNhan.addActionListener(e -> {
            int soNguoi = (int) cbSoNguoi.getSelectedItem() + 1;

            // Ng∆∞·ªùi ƒë·∫°i di·ªán l√† ng∆∞·ªùi ƒë·∫ßu ti√™n, l·∫•y CCCD t·ª´ tfMaChung
            String cccdNguoiDaiDien = tfMaChung.getText();

            // Th√¥ng tin t·ª´ t√†i kho·∫£n ƒëƒÉng nh·∫≠p
            String hoTen = UserInfoService.getFullName("userinfos.xml", username);
            String gmail = UserInfoService.getEmail("userinfos.xml", username);
            String sdt = UserInfoService.getPhone("userinfos.xml", username);


            StringBuilder danhSachKhach = new StringBuilder();
            danhSachKhach.append("- ").append(hoTen)
                    .append(" [M√£ ƒë·ªãnh danh : ").append(cccdNguoiDaiDien).append("]\n");

            for (int i = 0; i < soNguoi; i++) {
                String ten = hoTenFields[i].getText().trim();
                String loai = (String) loaiCombos[i].getSelectedItem();
                String ma = maFields[i].getText().trim();

                // N·∫øu t√™n ho·∫∑c m√£ b·ªã r·ªóng, c√≥ th·ªÉ th√¥ng b√°o l·ªói ·ªü ƒë√¢y (tu·ª≥ b·∫°n)
                if (ten.isEmpty() || ma.isEmpty()) continue;

                danhSachKhach.append("- ").append(ten)
                        .append(" [").append(loai).append(" : ").append(ma).append("]\n");
            }



            String thoiGianTao;
            try {
                thoiGianTao = LocalDateTime.now().format(DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss"));
            } catch (Exception ex) {
                throw new RuntimeException(ex);
            }

            String requestId = generateRequestId();

            String info = String.format("""
TH√îNG TIN ƒê·∫∂T PH√íNG

Ng∆∞·ªùi d√πng: %s
Ng∆∞·ªùi ƒë·∫°i di·ªán: %s
CCCD: %s
Gmail: %s
SƒêT: %s

S·ªë ng∆∞·ªùi: %d

Danh s√°ch kh√°ch:
%s
Ph√≤ng: %s
M√¥ t·∫£: %s
Lo·∫°i: %s
Gi√°: %,.0f VND

Check-in: %s
Check-out: %s
T·∫°o y√™u c·∫ßu: %s
Tr·∫°ng th√°i: ƒê√£ g·ª≠i y√™u c·∫ßu
""",
                    username,
                    hoTen,
                    cccdNguoiDaiDien,
                    gmail,
                    sdt,
                    soNguoi,
                    danhSachKhach.toString(),
                    selectedRoom.getRoomId(),
                    selectedRoom.getDescription(),
                    selectedRoom.getType(),
                    selectedRoom.getPrice(),
                    selectedRoom.getCheckIn(),
                    selectedRoom.getCheckOut(),
                    thoiGianTao
            );

            String[] options = {"Quay l·∫°i", "X√°c nh·∫≠n"};
            int result = JOptionPane.showOptionDialog(
                    mainFrame,
                    info,
                    "üìã X√°c nh·∫≠n ƒë·∫∑t ph√≤ng",
                    JOptionPane.YES_NO_OPTION,
                    JOptionPane.INFORMATION_MESSAGE,
                    null,
                    options,
                    options[1]
            );

            if (result == 1) { // X√°c nh·∫≠n
                // T·∫°o danh s√°ch Person t·ª´ c√°c tr∆∞·ªùng nh·∫≠p
                List<Person> danhSach = new ArrayList<>();

                // Ng∆∞·ªùi ƒë·∫°i di·ªán l√† ng∆∞·ªùi ƒë·∫ßu ti√™n
                danhSach.add(new Person(hoTen, "CCCD", cccdNguoiDaiDien));

                for (int i = 0; i < soNguoi; i++) {
                    String ten = hoTenFields[i].getText().trim();
                    String loai = (String) loaiCombos[i].getSelectedItem();
                    String ma = maFields[i].getText().trim();

                    if (ten.isEmpty() || ma.isEmpty()) continue;

                    danhSach.add(new Person(ten, loai, ma));
                }

                // G·ª≠i request
                RequestService.createRequest(
                        requestId,
                        username,
                        hoTen,
                        gmail,
                        sdt,
                        selectedRoom.getRoomId(),
                        selectedRoom.getCheckIn(),
                        selectedRoom.getCheckOut(),
                        selectedRoom.getPrice(),
                        danhSach
                );

                NotificationService.createNotification(
                        "BK00000001", requestId, username,
                        "Y√™u c·∫ßu duy·ªát", "ƒê√£ g·ª≠i"
                );

                // Th√¥ng b√°o v√† quay v·ªÅ giao di·ªán t√¨m ki·∫øm
                JOptionPane.showMessageDialog(mainFrame, "G·ª≠i y√™u c·∫ßu th√†nh c√¥ng!", "Th√¥ng b√°o", JOptionPane.INFORMATION_MESSAGE);
                JPanel homePanel = CustomerDashboardView.createUserHomePanel();
                mainFrame.setCustomerDynamicContent(homePanel);
                mainFrame.setCustomerSelectedMenu("Trang ch·ªß");
            }
        });



        btnPanel.add(btnQuayLai);
        btnPanel.add(btnXacNhan);

        return btnPanel;
    }
}
